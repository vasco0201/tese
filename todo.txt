Dúvidas:

-> falar ao professor sobre o capitulo do arima (as 2 maneiras de testar) e o facto de o erro ser tão baixo
-> utilizar outro método que não a agregação dos dados para prever com + time steps
-> preciso de fazer um plot com todos para demonstrar a diferença de performance
-> tamanho do train set é muito menor no arima porque demora anos a compilar se for igual ao da nnr
-> Devia testar tudo nas mesmas condicoes (o tamanho do test set devia ser o mesmo)? Não? Perguntar ao professor como é que faço isto, porque nas redes eu mando depois um conjunto de valores de tamanho indefinido para ele predizer e no arima é diferente, dizemos o numero de steps que queremos predizer e ele faz
-> no arima não dá para ir fazendo "refit" e o arima não é tão bom a generalizar e also, as redes neuronais utilizam sempre 3 inputs passados de dados reais para fazer a predição enquanto que aqui ele consegue prever logo para o dia todo
-> arima é menos scalable?
Next steps:
-> Escrever os resultados por ordem:
	Freeways:
		nn (para o mm test set 1 dia) : Train Mape:  9.055196744799252
										Test Mape:  4.569109759487948

 
		arima: re-fit every step -> Test Mape: 2.722629355332856  
				re-fit every day -> Test Mape: 5.399 (1 day) Test Mape: 8.9 (2 days) Test Mape: 10.13 (4 days)  Test Mape: 12.043616011829 (1 week)

		lstm:
	Espiras:
		nn
		arima
		lstm
-> Quando for registar os resultados das espiras devia tratar os 0 carros como missing values
-> Registar o erro para cada horizonte de predição para os dados das auto estradas
-> Tenho de ver como é que a loss evolui para cada horizonte de predição 
-> Falta ver a evolução da loss para os dados das espiras
-> Continuar a fazer o plot para freeways!!!!
-> Ter um script para transformar os dados de uma espira em dados prontos para o arima *IMOPRTANTE*
-> tentar reproduzir os resultados do paper que diz que oarima não precisa de mtos dados e ir aumentando o conj de treino para ver se os resultados alteram
al
-> Falta continuar o plot da loss/epochs
-> deveria identificar os 0 como missing values?
-> Experimentar com dados de dias homologos (semana passada e etc)
-> LSTM estudar melhor funcionamento e aumentar o time lag para tomar partido das capaciades long term 

Already Done
-> Decobri empiricamente através do plot do fluxo do transito da autoestrada que há uma diferença CLARA no que diz respeito aos dias de semana e aos fins de semana
-> testar as resdes para 30,45 e 60 minutos feito, só falta registar resultados -> Feito tá no docs
-> Atualmente o modelo está overfitted porque val loss >> loss -> solved with weight regularization and less epochs
-> ver a média dos pesos para ver se há algum que seja absurdo ->
-> try L1+L2 regularization
-> Fazer um log para começar a registar resultados e tirar conclusoes
-> Preciso de estudar mais a fundo os diferentes optimizers para ver qual o melhor - Irrelevante o adam é melhor
-> testar com espiras confluentes para ver se melhora os restultados (já está no notebook agora é preciso por em codigo) - O caso testado não demonstrou melhorias
-> Correr isto para todas as espiras e ver se os resultados sao semelhantes - In progress
   -> Se calhar não devia separar o dataset aleatoreamente né (:
-> incorporar o dataset completo (os 3 que temos atualmente)
-> Descobrir os melhores parametros para a rede automaticamente - n vale a pena


Questions:
	-> MAE é menor mas MSE aumenta?????????
	-> Val loss ligeiramente menor do que a loss
	-> SQMAPE sklearn



Freeway data (provided by Jianhua Guo)
Arima -> Running
	  -> Model params for the first freeway : (5,0,0)(0, 1, 0)[96]
	  -> Split the set in training and testing sets
	  -> Come up with a way to plot mean mape for each time of day 
NN -> 11% mape, maybe have to try different parameters (but theres clearly an improvement vs the loop sensor data)
   -> Sudden large increase in the error
   ->


Missing values: 
	-> imputation using average of the last hour of traffic flow  
	-> Change it to average of before and after  the missing value


Coisas interessantes para falar:

Smoothing :
	Tentei com Z-Score e agora estou a utilizar a média + 2* std dev para detectar outliers e faço a media dos valores adjacentes para imputar

Other useful info:
merge multiple files and delete duplicate lines:  awk '!seen[$0]++' file1.txt file2.txt file3.txt > out20.txt 
